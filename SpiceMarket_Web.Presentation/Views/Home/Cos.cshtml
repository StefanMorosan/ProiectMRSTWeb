@model List<SpiceMarket_Web.Domain.Models.CartItem>
@using SpiceMarket_Web.Domain.Models
@using System.Globalization
@using System.Text

@{
    ViewBag.Title = "Coșul meu";

    // Fetch product data from the database
    var db = new SpiceMarketContext();
    var produse = db.Produse.ToList();

    // Helper function to normalize and compare strings
    Func<string, string> normalize = s => string.IsNullOrWhiteSpace(s)
        ? s
        : string.Concat(s.Normalize(NormalizationForm.FormD)
        .Where(c => CharUnicodeInfo.GetUnicodeCategory(c) != UnicodeCategory.NonSpacingMark))
        .ToLowerInvariant();

    // Calculate the total price
    decimal totalPrice = 0m;
    if (Model != null && Model.Count > 0)
    {
        foreach (var item in Model)
        {
            // Normalize names and perform case-insensitive matching
            var produs = produse.FirstOrDefault(p => normalize(p.Nume) == normalize(item.Nume));
            var pretPerKg = produs != null ? produs.Pret : 0m; // Ensure price is fetched correctly
            totalPrice += pretPerKg * item.Cantitate;
        }
    }
}

<div class="container">
    <h2>Coșul tău de cumpărături</h2>
    @if (TempData["Error"] != null)
    {
        <div class="alert alert-danger">@TempData["Error"]</div>
    }
    @if (Model == null || Model.Count == 0)
    {
        <p>Coșul tău este gol.</p>
    }
    else
    {
        <table class="table table-striped">
            <thead>
                <tr>
                    <th>Produs</th>
                    <th>Cantitate (kg)</th>
                    <th>Preț per kg (MDL)</th>
                    <th>Preț total (MDL)</th>
                    <th>Acțiuni</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model)
                {
                    var produs = produse.FirstOrDefault(p => normalize(p.Nume) == normalize(item.Nume));
                    var pretPerKg = produs != null ? produs.Pret : 0m;
                    var pretTotal = pretPerKg * item.Cantitate;
                    <tr>
                        <td>@item.Nume</td>
                        <td>@item.Cantitate</td>
                        <td>@pretPerKg</td>
                        <td>@pretTotal</td>
                        <td><a href="@Url.Action("EliminaDinCos", "Home", new { produs = item.Nume })" class="btn btn-danger btn-sm">Elimină</a></td>
                    </tr>
                }
            </tbody>
        </table>

        <div class="total-price-section">
            <h3>Total: @totalPrice MDL</h3>
            <a href="@Url.Action("Checkout", "Home")" class="btn btn-success btn-lg">Continuă la checkout</a>
        </div>
    }
</div>